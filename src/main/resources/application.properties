# Server
server.port=8080
server.servlet.context-path=/api

# Datasource
spring.jpa.database=mysql
spring.jpa.show-sql=true
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.properties.hibernate.dialect.storage_engine=innodb
spring.main.allow-bean-definition-overriding=true
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/pickup_db?useSSL=false
spring.datasource.username=root
spring.datasource.password=

spring.thirdparty.datasource.url=jdbc:mysql://localhost:3306/thirdparty_db?useSSL=false
spring.thirdparty.datasource.username=root
spring.thirdparty.datasource.password=


# Kafka producer
spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.client-id= PickupProducerClient
spring.kafka.producer.key-serializer= org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer= org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.acks= all
spring.kafka.producer.retries= 5
spring.kafka.producer.buffer-memory= 33554432
spring.kafka.producer.batch-size= 16384
spring.kafka.producer.linger-ms= 1
spring.kafka.producer.enable-Idempotence= true
spring.kafka.producer.transactionalId= PickupTransId

#Kafka consumer
spring.kafka.consumer.bootstrap-servers= localhost:9092
spring.kafka.consumer.client-id= PickupConsumerClient
spring.kafka.consumer.key-deserializer= org.apache.kafka.common.serialization.StringDeserializer 
spring.kafka.consumer.value-deserializer= org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.auto-offset-reset= latest
spring.kafka.consumer.isolationLevel= read_committed
spring.kafka.consumer.max-poll-records= 20
spring.kafka.consumer.heartbeat-interval= 5000

#kafka topics and consumer groups
kafka.topic.name=pickupManagement
kafka.topic.groupId= pickupManagementGroup



#spring.datasource.url=jdbc:mysql://localhost:3306/pickup_db?useSSL=false
#spring.datasource.username=root
#spring.datasource.password=
#spring.jpa.hibernate.ddl-auto=validate
#spring.jpa.show-sql=true
#server.servlet.context-path=/api
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL57Dialect
#spring.jpa.properties.hibernate.dialect.storage_engine=innodb
#management.endpoints.web.exposure.include=*

## Server details
#server:
#  port: 8080
#  servlet:
#    context-path: /api
#
## Spring configurations
#spring:
#  jpa:
#    database: MYSQL
#    show-sql: true
#    generate-ddl: true
#    hibernate:
#      ddl-auto: validate
#    properties:
#      hibernate:
#        jdbc:
#          batch_size: 5
#          lob:
#            non_contextual_creation: true
#  datasource:
#    username: root
#    password:
#    url: jdbc:mysql://localhost:3306/pickup_db?useSSL=false
#  third-party-datasource:
#    username: root
#    password:
#    url: jdbc:mysql://localhost:3306/thirdparty_db?useSSL=false
#  kafka:
#    producer:
#      bootstrap-servers: localhost:9092
#      client-id: PickupClient
#      key-serializer: org.apache.kafka.common.serialization.StringSerializer
#      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
#      acks: all
#      retries: 3
#      batch-size: 16384
#      buffer-memory: 33554432
#      linger-ms: 1
#      enable-Idempotence: true
#      transactionalId: PickupTransId
#    consumer:
#      bootstrap-servers: localhost:9092
#      client-id: PickupClient
#      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer #org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
#      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer #org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
#      auto-offset-reset: latest
#      isolationLevel: read_committed
#      max-poll-records: 10
#      heartbeat-interval: 6000
#
##Kafka Topic Configurations
#kafka:
#  topic:
#    name: pickupManagement
#    groupId: pickupManagementGroup

