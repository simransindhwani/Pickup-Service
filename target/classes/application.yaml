#spring.datasource.url=jdbc:mysql://localhost:3306/pickup_db?useSSL=false
#spring.datasource.username=root
#spring.datasource.password=
#spring.jpa.hibernate.ddl-auto=validate
#spring.jpa.show-sql=true
#server.servlet.context-path=/api
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL57Dialect
#spring.jpa.properties.hibernate.dialect.storage_engine=innodb
#management.endpoints.web.exposure.include=*

# Server details
server:
  port: 8080
  servlet:
    context-path: /api

# Spring configurations
spring:
  jpa:
    database: MYSQL
    show-sql: true
    generate-ddl: true
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        jdbc:
          batch_size: 5
          lob:
            non_contextual_creation: true
  datasource:
    username: root
    password:
    url: jdbc:mysql://localhost:3306/pickup_db?useSSL=false
  kafka:
    producer:
      bootstrap-servers: localhost:9092
      client-id: PickupClient
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      retries: 3
      batch-size: 16384
      buffer-memory: 33554432
      linger-ms: 1
      enable-Idempotence: true
      transactionalId: PickupTransId
    consumer:
      bootstrap-servers: localhost:9092
      client-id: PickupClient
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer #org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer #org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      auto-offset-reset: latest
      isolationLevel: read_committed
      max-poll-records: 10
      heartbeat-interval: 6000

#Kafka Topic Configurations
kafka:
  topic:
    name: pickupManagement
    groupId: pickupManagementGroup

